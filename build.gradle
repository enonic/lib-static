// Build library: gradlew build
// Install library locally for development with: gradlew install

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.enonic.defaults' version '2.0.1'
    id 'com.enonic.xp.base' version '2.0.0'
    id "com.moowork.node" version "1.3.1"
}

dependencies {
    compileOnly "com.enonic.xp:core-api:${xpVersion}"
    compileOnly "com.enonic.xp:script-api:${xpVersion}"

    compile "com.enonic.xp:lib-io:${xpVersion}"
    testCompile "com.enonic.xp:testing:${xpVersion}"

    testImplementation "org.mockito:mockito-inline:3.7.7"
}

repositories {
    mavenLocal()
    jcenter()
    xp.enonicRepo()
}

// This task takes care of es6 under src/main/resources/site. You can replace it with build steps of your own if you want.
// IMPORTANT: IF YOU DON'T USE THIS TASK TO COMPILE THE REGULAR XP JS (/ES6/TS etc),
// MAKE SURE THAT YOUR OWN TASK/SCRIPT/LOGIC IGNORES .JSX FILES THAT ARE LOCATED UNDER src/main/resources/site !
// It's safer to let React4xp's tasks (in react4xp.gradle) handle those.
task compileXP(type: NodeTask) {
    group 'enonic xp'
    description 'Babel-compile Enonic XP ES6 source files'

    script = file('node_modules/@babel/cli/bin/babel.js')
    args = ["src/main/resources",
            "--plugins", "@babel/plugin-transform-parameters",
            "--plugins", "@babel/plugin-transform-destructuring",
            "--plugins", "@babel/plugin-transform-spread",
            "--plugins", "@babel/plugin-transform-arrow-functions",
            "--plugins", "@babel/plugin-proposal-object-rest-spread",
            "--out-dir", "build/resources/main"]

    inputs.dir 'src/main/resources'
    outputs.dir("build/resources/main")
}
compileXP.dependsOn += npmInstall
jar.dependsOn += 'compileXP'


task compileTest(type: NodeTask) {
    group 'enonic xp'
    description 'Babel-compile Enonic XP ES6 test files'

    script = file('node_modules/@babel/cli/bin/babel.js')
    args = ["src/test/resources",
            "--plugins", "@babel/plugin-transform-parameters",
            "--plugins", "@babel/plugin-transform-destructuring",
            "--plugins", "@babel/plugin-transform-spread",
            "--plugins", "@babel/plugin-transform-arrow-functions",
            "--plugins", "@babel/plugin-proposal-object-rest-spread",
            "--out-dir", "build/resources/test"]

    inputs.dir 'src/test/resources'
    outputs.dir("build/resources/test")
}

compileTest.dependsOn += compileXP
test.dependsOn += 'compileTest'
